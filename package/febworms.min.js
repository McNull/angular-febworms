var febworms=febworms||{};febworms.Field=function(a,b){this.name=this.type=a,b&&angular.extend(this,b),this.displayName=this.displayName||this.type.charAt(0).toUpperCase()+this.type.substring(1)},angular.module("febworms",["ngRoute","dq","templates-febworms"]),angular.module("febworms").config(["$provide",function(a){a.provider("febwormsConfig",function(){function a(a){for(var b=c.length;b--&&c[b].type!==a;);return b}var b={enableDebugInfo:!0,validation:{messages:{},patterns:{}},fields:{templates:[],categories:{},renderInfo:{}}},c=b.fields.templates;return{debug:function(a){b.enableDebugInfo=a},fields:{add:function(b,d,e,f){if(!(b&&b.type&&d&&d.length))throw new Error("Need a valid objectTemplate and at least one category");var g=a(b.type);-1!==g?c[g]=b:c.push(b),this.category(b.type,d),this.renderInfo(b.type,e,f)},remove:function(b){var d=a(b);-1!==d&&c.splice(d,1),this.category(b),this.renderInfo(b)},renderInfo:function(a,c,d){var e={templateUrl:c,propertiesTemplateUrl:d};b.fields.renderInfo[a]=e},category:function(a,c){angular.isArray(c)||(c=[c]),angular.forEach(b.fields.categories,function(b){delete b[a]}),angular.forEach(c,function(c){void 0===b.fields.categories[c]&&(b.fields.categories[c]={}),b.fields.categories[c][a]=!0})}},validation:{message:function(a,c){var d=b.validation.messages;if(angular.isString(a)){if(!c)throw new Error("No message specified for "+a);d[a]=c}else angular.extend(d,a)},pattern:function(a,c){angular.isString(a)?b.validation.patterns[name]=c:angular.extend(b.validation.patterns,a)}},$get:function(){return b}}})}]),angular.module("febworms").config(["febwormsConfigProvider",function(a){a.validation.message({required:"A value is required for this field.",minlength:'The value does not match the minimum length{{ field.schema && (" of " + field.schema.validation.minlength + " characters" || "")}}.',maxlength:'The value exceeds the maximum length{{ field.schema && (" of " + field.schema.validation.maxlength + " characters" || "")}}.',pattern:'The value "{{ field.state.$viewValue }}" does not match the required format.',email:'The value "{{ field.state.$viewValue }}" is not a valid email address.',unique:'The value "{{ field.state.$viewValue }}" is already in use.',number:'The value "{{ field.state.$viewValue }}" is not a number.',min:'The value {{ field.schema && ("should be at least " + field.schema.validation.min) || field.state.$viewValue + " is too low" }}',max:'The value {{ field.schema && ("should be less than " + field.schema.validation.max) || field.state.$viewValue + " is too high" }}'});var b={"Text input fields":[new febworms.Field("text",{displayName:"Textbox"}),new febworms.Field("email"),new febworms.Field("number",{validation:{maxlength:15}}),new febworms.Field("password"),new febworms.Field("textarea")],"Checkbox fields":[new febworms.Field("checkbox",{nolabel:!0}),new febworms.Field("checkboxlist",{displayName:"Checkbox List",options:[{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:{1:!0,2:!0}})],"Select input fields":[new febworms.Field("radiobuttonlist",{displayName:"Radiobutton List",options:[{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:"1"}),new febworms.Field("selectlist",{displayName:"Select List",options:[{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:"1"})]};angular.forEach(b,function(b,c){angular.forEach(b,function(b){a.fields.add(b,c)})}),a.validation.pattern({None:void 0,Url:"^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",Domain:"^([a-z][a-z0-9-]+(\\.|\\-*\\.))+[a-z]{2,6}$","IPv4 Address":"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$","Email Address":"^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$",Integer:"^-{0,1}\\d+$","Positive Integers":"^\\d+$","Negative Integers":"^-\\d+$",Number:"^-{0,1}\\d*\\.{0,1}d+$","Positive Number":"^\\d*\\.{0,1}\\d+$","Negative Number":"^-\\d*\\.{0,1}\\d+$","Year (1920-2099)":"^(19|20)[\\d]{2,2}$",Password:"(?=.*\\d)(?=.*[!@#$%^&*\\-=()|?.\"';:]+)(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$"})}]),angular.module("febworms").directive("febwormsBindExpression",["$interpolate",function(a){function b(a){for(var b=[],c=a.parts,d=c.length;d--;){var e=c[d];e.exp&&!e.exp.match(/^\s*$/)&&b.push(e.exp)}return"["+b.join()+"]"}return function(c,d,e){function f(){i&&i(),i=void 0}function g(){d.text(h(c))}var h,i,j;c.$on("$destroy",function(){f()}),c.$watch(e.febwormsBindExpression,function(e){if(void 0!==e){h=a(e),d.addClass("ng-binding").data("$binding",h);var k=b(h);j!==k?(j=k,f(),i=c.$watchCollection(k,function(){g()})):g()}})}}]),angular.module("febworms").directive("febwormsDropdownInput",["$compile","$document","$timeout","$parse","febwormsUtils",function(a,b,c,d,e){function f(a,b){var d='<div class="febworms-dropdown-input input-append"><input type="text"/><div class="btn-group"><a href="" class="btn dropdown-toggle" ng-click="dropdownToggle()"><span class="caret"></span></a></div></div>',e=angular.element(d),f=e.find("input"),g=b.prop("attributes");angular.forEach(g,function(a){"febworms-dropdown-input"!==a.name&&"class"!==a.name&&f.attr(a.name,a.value)});var h,i=e.find("a");return a.dropdownToggle=function(){i[0].focus(),a.dropdownVisible=!a.dropdownVisible},i.on("blur",function(){h=c(function(){a.dropdownVisible=!1},100)}),a.$on("$destroy",function(){h&&c.cancel(h),h=void 0}),e}function g(a,b,c,f,g){var h=d(c.ngModel),i=h.assign,j='<div class="febworms-dropdown" ng-class="{ \'open\': dropdownVisible }"><ul ng-if="items && items.length" class="dropdown-menu"><li ng-repeat="item in items" ng-class="{ active: item.value === getModelValue() }"><a href="" ng-click="setModelValue(item.value)">{{ item.text || item.value }}</a></li></ul></div>',k=angular.element(j);a.setModelValue=function(b){a.dropdownVisible=!1;for(var c=b||"",d=f.$formatters.length;d--;){var e=f.$formatters[d],c=e(c);if(void 0===c)break}d=f.$parsers.length;for(var g=c;d--;){var e=f.$parsers[d];if(g=e(g),void 0===g)break}void 0===g?(f.$setViewValue(c),f.$render()):i(a,b)},a.getModelValue=function(){return h(a)};var l=g[0];return a.$watch("dropdownVisible",function(a){if(a){var b=l.getBoundingClientRect(),c=e.getScrollOffset();k.css({left:c.x+b.left+"px",top:c.y+b.top+l.clientHeight+"px",width:l.clientWidth+"px"})}}),a.$watchCollection(c.febwormsDropdownInput,function(b){a.items=b}),a.$on("$destroy",function(){k.remove()}),k}return{priority:1e3,restrict:"A",terminal:!0,scope:!0,compile:function(){return function(c,d,e){var h=f(c,d,e);d.append(h),a(h)(c);var i=h.find("input"),j=i.controller("ngModel"),k=g(c,d,e,j,h),l=a(k),m=b.find("body");m.append(k),l(c)}}}}]),angular.module("febworms").directive("febwormsInputNumber",function(){return{require:"ngModel",link:function(a,b,c,d){if(d.$parsers.push(function(a){if(void 0==a)return"";var b=a.replace(/[^0-9]/g,""),c=parseInt(b);return b!=a&&(d.$setViewValue(b),d.$render()),c}),d.$parsers.push(function(a){var b=d.$isEmpty(a);return b||/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/.test(a)?(d.$setValidity("number",!0),""===a?null:b?a:parseFloat(a)):(d.$setValidity("number",!1),void 0)}),d.$formatters.push(function(a){return d.$isEmpty(a)?void 0:a}),c.min){var e=function(a){var b=parseFloat(c.min);return!d.$isEmpty(a)&&b>a?(d.$setValidity("min",!1),void 0):(d.$setValidity("min",!0),a)};d.$parsers.push(e),d.$formatters.push(e)}if(c.max){var f=function(a){var b=parseFloat(c.max);return!d.$isEmpty(a)&&a>b?(d.$setValidity("max",!1),void 0):(d.$setValidity("max",!0),a)};d.$parsers.push(f),d.$formatters.push(f)}d.$formatters.push(function(a){return d.$isEmpty(a)||angular.isNumber(a)?(d.$setValidity("number",!0),a):(d.$setValidity("number",!1),void 0)})}}}),angular.module("febworms").directive("febwormsPlaceholder",function(){return{link:function(a,b,c){a.$watch(c.febwormsPlaceholder,function(a){b.attr("placeholder",a)})}}}),angular.module("febworms").factory("febwormsUtils",["$templateCache","$window","febwormsConfig",function(a,b,c){var d=+new Date%1e4;return{getScrollOffset:function(){var a={};if(void 0!==b.pageYOffset)a.x=b.pageXOffset,a.y=b.pageYOffset;else{var c=b.document.documentElement;a.x=c.scrollLeft,a.y=c.scrollTop}return a},defaultArea:"default",getRenderInfo:function(a){var b=c.fields.renderInfo[a.type];return b||(b={},c.fields.renderInfo[a.type]=b),b.templateUrl||(b.templateUrl=this.getTemplateUrl(a)),b.propertiesTemplateUrl||(b.propertiesTemplateUrl=this.getTemplateUrl(a,"properties")),b},formatTemplateUrl:function(a,b){return"febworms/field-templates/"+(b||this.defaultArea)+"/"+a+".tmpl.html"},getTemplateUrl:function(b,c){c=c||this.defaultArea;var d=b.type,e=this.formatTemplateUrl(d,c),f=a.get(e);if(!f){if("properties"===c||c===this.defaultArea)return this.formatTemplateUrl("not-in-cache");e=this.getTemplateUrl(b,this.defaultArea)}return e},getUnique:function(){return++d},copyField:function(a){var b=angular.copy(a);return b.name="field"+this.getUnique(),b},findElementsByClass:function(a,b,c,d){if(d=d||[],a.className===b&&d.push(a),a.hasChildNodes())for(var e=0;e<a.children.length;e++){var f=a.children[e];f.className===b&&d.push(f),c&&this.findElementsByClass(f,b,c,d)}return d}}}]),angular.module("febworms").filter("j$on",function(){return function(a,b){return b?JSON.stringify(a||{},null,"  "):angular.toJson(a||{},!0)}}).directive("jsonify",["$window","$filter",function(a,b){return{templateUrl:"febworms/common/jsonify/jsonify.tmpl.html",replace:!0,scope:{jsonify:"=",displayHidden:"@jsonifyDisplayHidden"},link:function(c,d,e){c.expression=e.jsonify,c.copy=function(){a.prompt("Copy to clipboard: Ctrl+C, Enter",b("j$on")(c.jsonify,c.displayHidden))}}}}]),angular.module("febworms").controller("febwormsTabsController",["$scope",function(){var a=this;this.panes=[],this.addPane=function(b){a.panes.push(b),1===a.panes.length&&a.active(b)},this.active=function(b){angular.forEach(a.panes,function(a){a.active=!1}),b.active=!0}}]),angular.module("febworms").directive("febwormsTabs",function(){return{require:["febwormsTabs"],restrict:"EA",transclude:!0,controller:"febwormsTabsController",templateUrl:"febworms/common/tabs/tabs.tmpl.html",link:function(a,b,c,d){a.$_tabCtrl=d[0]}}}),angular.module("febworms").controller("febwormsTabsPaneController",["$scope",function(){}]),angular.module("febworms").directive("febwormsTabsPane",["febwormsTabsPaneLinkFn",function(a){return{require:["febwormsTabsPane","^febwormsTabs"],restrict:"EA",scope:!0,transclude:!0,controller:"febwormsTabsPaneController",templateUrl:"febworms/common/tabs/tabs-pane.tmpl.html",link:a}}]).factory("febwormsTabsPaneLinkFn",function(){return function(a,b,c,d){var e=d[0],f=d[1];a.$_paneCtrl=e,c.$observe("febwormsTabsPane",function(a){e.title=a}),f.addPane(e)}}),angular.module("dq",[]).factory("dqUtils",["$window","$rootScope",function(a){var b=null;return{getEvent:function(b){return b&&b.originalEvent?b.originalEvent:b||a.event},stopEvent:function(a){return a.cancelBubble=!0,a.bubbles=!1,a.stopPropagation&&a.stopPropagation(),a.preventDefault&&a.preventDefault(),!1},dragData:function(a){return void 0===a?b:(b=a,void 0)},getParentArea:function(a){var b={};return a.$emit("dqLocateArea",b),b.name},isAreaMatch:function(a){var c=this.getParentArea(a),d=b?b.area:"";return c===d}}}]),angular.module("dq").directive("dqDragArea",["dqUtils",function(){function a(a,b,c,d){d&&b&&b.area===c&&a.$eval(d)}return{restrict:"AEC",link:function(b,c,d){var e=d.dqDragArea||d.dqDragAreaName||"";b.$on("dqDragBegin",function(c,f){a(b,f,e,d.dqDragProgressBegin)}),b.$on("dqDragEnd",function(c,f){a(b,f,e,d.dqDragProgressEnd)}),b.$on("dqLocateArea",function(a,b){b.name=e,a.stopPropagation()})}}}]),angular.module("dq").directive("dqDragEnter",["dqDragTrack",function(a){return{link:a}}]).directive("dqDragLeave",["dqDragTrack",function(a){return{link:a}}]).directive("dqDragOver",["dqDragTrack",function(a){return{link:a}}]).directive("dqDrop",["dqDragTrack",function(a){return{link:a}}]).factory("dqDragTrack",["dqUtils","$document",function(a,b){return function(c,d,e){function f(b){var c=a.getEvent(b),d=c.target||b.target;return d!==j&&(j.contains(d)||g(!0)),m.off("dragover",f),l=!1,c.dataTransfer.dropEffect=k,a.stopEvent(b)}function g(a){i=!1;var b=e.dqDragLeave;b&&(a?c.$apply(function(){c.$eval(b)}):c.$eval(b))}if(d.data("dqDragTrack")!==!0){var h=!1,i=!1,j=d[0],k="none",l=!1,m=b.find("body");c.$on("$destroy",function(){m.off("dragover",f)}),c.$on("dqDragBegin",function(){h=a.isAreaMatch(c)}),c.$on("dqDragEnd",function(){h&&g(!1)}),d.on("dragenter",function(){if(h&&i===!1){i=!0;var a=e.dqDragEnter;a&&c.$apply(function(){c.$eval(a)})}}),d.on("dragleave",function(){h&&i===!0&&(l=!0,m.on("dragover",f))}),d.on("dragover",function(b){if(h){var d,f=a.getEvent(b),g=e.dqDragOver;if(g&&c.$apply(function(){d=c.$eval(g)}),k=d===!1?"none":"copy",!l)return f.dataTransfer.dropEffect=k,a.stopEvent(b)}}),d.on("drop",function(b){if(a.getEvent(b),h){var d=e.dqDrop;d&&c.$apply(d)}return a.stopEvent(b)}),d.data("dqDragTrack",!0)}}}]),angular.module("dq").directive("dqDraggable",["dqUtils","$rootScope",function(a,b){function c(a,c,d,e,f){d.$apply(function(){var g=d.$eval(e),h={area:c,data:g};f(h),b.$broadcast(a,h)})}return{restrict:"AEC",link:function(b,d,e){var f=e.dqDraggable||e.dqDragTargetArea||"",g=!1;b.$watch(e.dqDragDisabled,function(a){g=a,d.attr("draggable",g?"false":"true")}),d.on("selectstart",function(b){return!g&&this.dragDrop?(this.dragDrop(),b=a.getEvent(b),a.stopEvent(b)):void 0}).on("dragstart",function(d){if(d=a.getEvent(d),g)return a.stopEvent(d);var h=d.dataTransfer;h.effectAllowed="all",h.setData("Text","The cake is a lie!"),c("dqDragBegin",f,b,e.dqDragBegin,function(b){a.dragData(b)})}).on("dragend",function(){c("dqDragEnd",f,b,e.dqDragEnd,function(){a.dragData(null)})})}}}]),angular.module("febworms").controller("febwormsEditCanvasController",["$scope","dqUtils","$timeout","febwormsUtils",function(a,b,c){a.dragPlaceholder={visible:!1,index:0},this.dragEnter=function(){a.dragPlaceholder.visible=!0,a.dragPlaceholder.index=a.schema.fields.length},this.dragLeave=function(){a.dragPlaceholder.visible=!1},this.dragBeginCanvasField=function(a,b){return c(function(){b.$_isDragging=!0},1),{source:"canvas",field:b,index:a}},this.dragEndCanvasField=function(a){c(function(){a.$_isDragging=!1},10)},this.drop=function(){var c=b.dragData();if(!c||!c.data)throw Error("Drop without data");var d=c.data.field,e=c.data.source,f=c.data.index;a.schema.fields,"palette"==e?a.schemaCtrl.addField(d,a.dragPlaceholder.index):"canvas"==e&&a.schemaCtrl.moveField(f,a.dragPlaceholder.index),d.$_isDragging=!1}}]),angular.module("febworms").directive("febwormsEditCanvas",function(){return{require:["^febwormsEdit","^febwormsSchema"],templateUrl:"febworms/edit/canvas/canvas.tmpl.html",controller:"febwormsEditCanvasController as canvasCtrl",link:function(a,b,c,d){a.editCtrl=d[0],a.schemaCtrl=d[1]}}}),angular.module("febworms").directive("febwormsEditCanvasField",function(){return{replace:!0,templateUrl:"febworms/edit/canvas/field/field.tmpl.html"}}),angular.module("febworms").controller("febwormsPropertyFieldOptionsController",["$scope",function(a){function b(b,c){b!==c&&(a.multiple?(a.field.value[b]=a.field.value[c],delete a.field.value[c]):c===a.field.value&&(a.field.value=b))}var c=1;a.$watchCollection("field.options",function(c){c&&angular.forEach(c,function(c){c.$_valueWatchFn||(c.$_valueWatchFn=a.$watch(function(){return c.value},b))})}),this.addOption=function(){a.field.options||(a.field.options=[]);var b={value:"Option "+c++};a.field.options.push(b);var d=a.field.options.length;a.multiple||1!==d||(a.field.value=b.value)},this.removeOption=function(b){var c=a.field.options.splice(b,1);if(c&&c.length){var d=c[0];a.multiple?void 0!==a.field.value[d.value]&&delete a.field.value[d.value]:(d.value===a.field.value&&a.field.options.length&&(a.field.value=a.field.options[0].value),d.$_valueWatchFn())}}}]),angular.module("febworms").directive("febwormsPropertyFieldOptions",["febwormsPropertyFieldOptionsLinkFn",function(a){return{scope:!0,controller:"febwormsPropertyFieldOptionsController as optionsCtrl",templateUrl:"febworms/edit/canvas/field/properties/options/options.tmpl.html",link:a}}]).factory("febwormsPropertyFieldOptionsLinkFn",function(){return function(a,b,c){a.multiple=!1,c.$observe("febwormsPropertyFieldOptions",function(b){"multiple"===b&&(a.multiple=!0)})}}),angular.module("febworms").directive("febwormsEditCanvasFieldProperties",["febwormsUtils",function(a){return{templateUrl:"febworms/edit/canvas/field/properties/properties.tmpl.html",replace:!0,scope:{field:"=febwormsEditCanvasFieldProperties"},link:function(b){b.$watch("fieldPropertiesForm.$invalid",function(a){b.field.$_invalid=a}),b.renderInfo=a.getRenderInfo(b.field)}}}]),angular.module("febworms").directive("febwormsPropertyFieldCommon",["febwormsPropertyFieldCommonLinkFn",function(a){return{restrict:"AE",templateUrl:"febworms/edit/canvas/field/properties/property-field/common.tmpl.html",link:a}}]).factory("febwormsPropertyFieldCommonLinkFn",function(){return function(a,b,c){a.fields={fieldname:!1,displayname:!1,placeholder:!1},a.$watch(c.febwormsPropertyFieldCommon,function(b){a.fields=angular.extend(a.fields,b)})}}),angular.module("febworms").directive("febwormsPropertyFieldValue",["febwormsPropertyFieldValueLinkFn",function(a){return{require:["^form"],templateUrl:"febworms/edit/canvas/field/properties/property-field/field-value.tmpl.html",transclude:!0,link:a}}]).factory("febwormsPropertyFieldValueLinkFn",["$parse",function(){return function(a,b,c,d){a.draw=!0;var e,f=d[0];a.$watch("field.$_redraw",function(c){if(c){var d=f.fieldValue;d&&(e=d.$viewValue),a.draw=!1,a.field.$_redraw=!1}else a.draw=!0,b=b}),a.$watch(function(){return f.fieldValue},function(a){a&&e&&(a.$setViewValue(e),a.$render(),e=void 0)})}}]).directive("febwormsFieldRedraw",function(){return{require:["ngModel"],link:function(a,b,c){var d=a.$eval(c.ngModel);a.$watch(c.ngModel,function(b){b!=d&&(a.field.$_redraw=!0,d=b)})}}}),angular.module("febworms").directive("febwormsPropertyField",["febwormsPropertyFieldLinkFn",function(a){return{restrict:"AE",templateUrl:"febworms/edit/canvas/field/properties/property-field/property-field.tmpl.html",transclude:!0,scope:!0,link:a}}]).factory("febwormsPropertyFieldLinkFn",function(){return function(a,b,c){c.$observe("febwormsPropertyField",function(b){a.fieldName=b}),c.$observe("febwormsPropertyFieldLabel",function(b){b&&(a.fieldLabel=b)})}}),angular.module("febworms").directive("febwormsParsePattern",function(){return{require:["ngModel"],link:function(a,b,c,d){function e(a){try{new RegExp(a)}catch(b){return f.$setValidity("pattern",!1),void 0}return f.$setValidity("pattern",!0),a}var f=d[0];f.$parsers.push(e)}}}),angular.module("febworms").directive("febwormsPropertyFieldValidation",["febwormsPropertyFieldValidationLinkFn",function(a){return{restrict:"A",templateUrl:"febworms/edit/canvas/field/properties/validation/validation.tmpl.html",link:a}}]).factory("febwormsPropertyFieldValidationLinkFn",["febwormsConfig",function(a){var b=[],c=a.validation.patterns;return angular.forEach(c,function(a,c){b.push({value:a,text:c})}),function(a,c,d){a.patternOptions=b,a.field.validation=a.field.validation||{},a.field.validation.messages=a.field.validation.messages||{},a.fields={required:!1,minlength:!1,maxlength:!1,pattern:!1},a.$watch(d.febwormsPropertyFieldValidation,function(b){a.fields=angular.extend(a.fields,b)})}}]),angular.module("febworms").directive("febwormsEditValidationMessage",["febwormsEditValidationMessageLinkFn",function(a){return{templateUrl:"febworms/edit/canvas/field/properties/validation/validation-message.tmpl.html",link:a,scope:!0}}]).factory("febwormsEditValidationMessageLinkFn",function(){var a="Enter a error message here that will be shown if this validation fails. If this field is empty a default message will be used.";return function(b,c,d){d.$observe("febwormsEditValidationMessage",function(a){b.validationType=a}),d.$observe("febwormsEditValidationTooltip",function(c){c=c||a,b.tooltip=c})}}),angular.module("febworms").controller("febwormsEditController",["$scope","febwormsUtils","$location",function(a,b,c){var d=this;a.preview=c.search().preview,this.setMetaForm=function(a){d.metaForm=a},this.togglePreview=function(){a.preview=!a.preview},a.$watch(function(){var b=a.schemaCtrl.model();if(b&&(b.$_invalid=d.metaForm?d.metaForm.$invalid:!1,!b.$_invalid)){var c=b.fields;if(c)for(var e=c.length;--e>=0&&!b.$_invalid;)b.$_invalid=c[e].$_invalid}})}]),angular.module("febworms").directive("febwormsEdit",function(){return{priority:100,require:"febwormsSchema",restrict:"AE",scope:{schema:"=?febwormsSchema",actionsEnabled:"=?febwormsActionsEnabled",onSave:"&febwormsOnSave",onCancel:"&febwormsOnCancel",preview:"=?febwormsPreview"},replace:!0,controller:"febwormsEditController as editCtrl",templateUrl:"febworms/edit/edit.tmpl.html",link:function(a,b,c,d){void 0===a.schema&&(a.schema={}),void 0===a.actionsEnabled&&(a.actionsEnabled=!0),void 0===a.preview&&(a.preview=!1),d.model(a.schema),a.schemaCtrl=d}}}),angular.module("febworms").directive("febwormsEditFormActions",["febwormsConfig",function(a){return{require:"^febwormsEdit",templateUrl:"febworms/edit/form-actions/form-actions.tmpl.html",link:function(b,c,d,e){b.debugInfoEnabled=a.enableDebugInfo,b.togglePreview=function(){b.schema.$_invalid||e.togglePreview()},b.handleSave=function(){b.schema.$_invalid||b.onSave({schema:b.schema})},b.handleCancel=function(){b.onCancel({schema:b.schema})}}}}]),angular.module("febworms").directive("febwormsEditMeta",function(){return{require:["^febwormsEdit","^febwormsSchema"],restrict:"AE",templateUrl:"febworms/edit/meta/meta.tmpl.html",link:function(a,b,c,d){editCtrl=d[0];var e=b.find("form").controller("form");editCtrl.setMetaForm(e)}}}),angular.module("febworms").controller("febwormsEditPaletteCategoriesController",["$scope","febwormsConfig",function(a,b){if(a.categories=b.fields.categories,a.setCategory=function(b,c){a.categoryName=b,a.category=c},!a.category)for(var c in a.categories){a.setCategory(c,a.categories[c]);break}}]),angular.module("febworms").directive("febwormsEditPaletteCategories",function(){return{templateUrl:"febworms/edit/palette/categories/categories.tmpl.html",require:"^febwormsEditPalette",scope:{category:"=?"},controller:"febwormsEditPaletteCategoriesController"}}),angular.module("febworms").controller("febwormsEditPaletteController",["$scope","febwormsConfig",function(a,b){a.templates=angular.copy(b.fields.templates),a.templateFilter=function(b){return!a.selectedCategory||a.selectedCategory[b.type]}}]),angular.module("febworms").directive("febwormsEditPalette",function(){return{require:["^febwormsSchema"],templateUrl:"febworms/edit/palette/palette.tmpl.html",controller:"febwormsEditPaletteController",link:function(a,b,c,d){a.schemaCtrl=d[0]}}}),angular.module("febworms").controller("febwormsFieldController",["$scope","febwormsUtils",function(a,b){var c,d,e=this;this.init=function(b,f,g){e.initForm(b),e.initField(f),e.initDefaultData(f,g),a.form=c,a.field=d},this.initForm=function(a){return c=a?a.model:{}},this.initField=function(c){return d={$_id:"id"+b.getUnique(),schema:c},a.$watch("field.schema.name",function(a){e.registerState(a)}),d},this.initDefaultData=function(b,d){var e=b.name;return c.data=c.data||{},d?(a.$watch("field.schema.value",function(a){c.data[b.name]=a}),a.$watch("field.schema.name",function(a,b){if(a!==b){var d=c.data[b];delete c.data[b],c.data[a]=d}})):c.data&&void 0===c.data[e]&&void 0!==b.value&&(c.data[e]=b.value),c.data},this.setFieldState=function(a){d.state=a,e.registerState(d.schema.name)},this.registerState=function(a){c.state&&d.state&&(c.state.$removeControl(d.state),d.state.$name=a,c.state.$addControl(d.state)),d.name=a},this.field=function(){return d},this.form=function(){return c}}]),angular.module("febworms").directive("febwormsField",["febwormsFieldLinkFn",function(a){return{require:["^?febwormsForm","febwormsField"],replace:!0,templateUrl:"febworms/form/field/field.tmpl.html",scope:{fieldSchema:"=febwormsField",tabIndex:"=?febwormsTabIndex",editMode:"=?febwormsEditMode",noValidationSummary:"=febwormsNoValidationSummary"},controller:"febwormsFieldController",link:a}}]).factory("febwormsFieldLinkFn",["febwormsUtils",function(a){return function(b,c,d,e){var f=e[0],g=e[1];void 0===b.tabIndex&&(b.tabIndex="auto"),b.renderInfo=a.getRenderInfo(b.fieldSchema),g.init(f,b.fieldSchema,b.editMode)}}]),angular.module("febworms").directive("febwormsFieldInput",["febwormsFieldInputLinkFn",function(a){return{require:["^febwormsField","ngModel"],link:a}}]).factory("febwormsFieldInputLinkFn",function(){return function(a,b,c,d){var e=d[0],f=d[1];e.setFieldState(f)}}),angular.module("febworms").controller("febwormsFormController",["$scope","$parse",function(a,b){this.model={};var c=this;this.init=function(d,e,f){var g=b(d),h=g.assign;return a.$watch(g,function(b){void 0===b&&(b={},h&&h(a,b)),c.model.data=b}),a.$watch(function(){return e.model()},function(a){void 0===a?e.model({}):c.model.schema=a}),c.model.state=f,c.model}}]),angular.module("febworms").directive("febwormsForm",["febwormsFormCompileFn",function(a){return{restrict:"AE",require:["^?form","febwormsForm","^febwormsSchema"],controller:"febwormsFormController",scope:!0,compile:a}}]).factory("febwormsFormLinkFn",function(){return function(a,b,c,d){var e=d[0],f=d[1],g=d[2];f.init(c.febwormsFormData,g,e)}}).factory("febwormsFormCompileFn",["febwormsFormLinkFn",function(a){return function(b,c){var d=c.febwormsNoRender;if("true"!==d){var e="<div febworms-form-fields></div>";b.append(e)}return a}}]),angular.module("febworms").directive("febwormsFormFields",function(){return{require:["^febwormsForm"],restrict:"AE",templateUrl:"febworms/form/form-fields/form-fields.tmpl.html",scope:{},link:function(a,b,c,d){var e=d[0];a.$watch(function(){return e.model},function(b){a.form=b})}}}),angular.module("febworms").controller("febwormsSchemaController",["$scope","febwormsUtils",function(a,b){var c;this.model=function(a){return void 0!==a&&(c=a,angular.isArray(a.fields)||(a.fields=[])),c},this.addField=function(a,d){var e=b.copyField(a);d=void 0===d?c.fields.length:d,c.fields.splice(d,0,e)},this.removeField=function(a){c.fields.splice(a,1)},this.swapFields=function(a,b){-1>=a||-1>=b||a>=c.fields.length||b>=c.fields.length||(c.fields[a]=c.fields.splice(b,1,c.fields[a])[0])},this.moveField=function(a,b){if(a>=0&&b<=c.fields.length&&a!==b){var d=c.fields.splice(a,1)[0];b>a&&--b,c.fields.splice(b,0,d)}}}]),angular.module("febworms").directive("febwormsSchema",["febwormsSchemaLinkFn",function(a){return{require:["febwormsSchema"],controller:"febwormsSchemaController",link:a}}]).factory("febwormsSchemaLinkFn",["$parse",function(a){return function(b,c,d,e){var f=e[0],g=a(d.febwormsSchema),h=g.assign,i=g(b);f.model(i),b.$watch(function(){return f.model()},function(a){h(b,a)})}}]),angular.module("febworms").directive("febwormsValidationSummary",["febwormsValidationSummaryLinkFn",function(a){return{require:["^?febwormsField","^?form"],templateUrl:"febworms/validation/summary.tmpl.html",scope:{fieldName:"@?febwormsValidationSummary",validationMessages:"=?febwormsValidationMessages"},link:a}}]).factory("febwormsValidationSummaryLinkFn",["febwormsConfig",function(a){return function(b,c,d,e){var f=e[0],g=e[1];f?(b.field=f.field(),b.form=f.form()):g&&(b.form={state:g},b.$watch("fieldName",function(a){b.field={name:a,state:g[a]}})),b.validationMessages&&angular.forEach(b.validationMessages,function(a,c){a||delete b.validationMessages[c]}),b.messages=angular.extend({},a.validation.messages,b.validationMessages)}}]),angular.module("febworms").directive("febwormsUniqueFieldName",function(){function a(a,b,c){var d,e=b.model(),f=!0;if(e)for(var g=e.fields,h=0;h<g.length;h++)if(d=g[h],d!==c&&c.name===d.name){f=!1;break}a.$setValidity("unique",f)}var b=0;return{priority:100,require:["ngModel","^febwormsSchema"],link:function(c,d,e,f){var g=f[0],h=f[1],i=c.field;if(!i)throw Error("No field property on scope");c.$watch(function(){return g.$modelValue},function(){++b}),c.$watch(function(){return b},function(){a(g,h,i)})}}}),angular.module("templates-febworms",["febworms/common/jsonify/jsonify.tmpl.html","febworms/common/tabs/tabs-pane.tmpl.html","febworms/common/tabs/tabs.tmpl.html","febworms/edit/canvas/canvas.tmpl.html","febworms/edit/canvas/field/field.tmpl.html","febworms/edit/canvas/field/properties/options/options.tmpl.html","febworms/edit/canvas/field/properties/properties.tmpl.html","febworms/edit/canvas/field/properties/property-field/common.tmpl.html","febworms/edit/canvas/field/properties/property-field/field-value.tmpl.html","febworms/edit/canvas/field/properties/property-field/property-field.tmpl.html","febworms/edit/canvas/field/properties/validation/validation-message.tmpl.html","febworms/edit/canvas/field/properties/validation/validation.tmpl.html","febworms/edit/edit.tmpl.html","febworms/edit/form-actions/form-actions.tmpl.html","febworms/edit/meta/meta.tmpl.html","febworms/edit/palette/categories/categories.tmpl.html","febworms/edit/palette/palette.tmpl.html","febworms/field-templates/default/checkbox.tmpl.html","febworms/field-templates/default/checkboxlist.tmpl.html","febworms/field-templates/default/dropdownlist.tmpl.html","febworms/field-templates/default/email.tmpl.html","febworms/field-templates/default/not-in-cache.tmpl.html","febworms/field-templates/default/number.tmpl.html","febworms/field-templates/default/password.tmpl.html","febworms/field-templates/default/radiobuttonlist.tmpl.html","febworms/field-templates/default/selectlist.tmpl.html","febworms/field-templates/default/text.tmpl.html","febworms/field-templates/default/textarea.tmpl.html","febworms/field-templates/properties/checkbox.tmpl.html","febworms/field-templates/properties/checkboxlist.tmpl.html","febworms/field-templates/properties/dropdownlist.tmpl.html","febworms/field-templates/properties/email.tmpl.html","febworms/field-templates/properties/number.tmpl.html","febworms/field-templates/properties/password.tmpl.html","febworms/field-templates/properties/radiobuttonlist.tmpl.html","febworms/field-templates/properties/selectlist.tmpl.html","febworms/field-templates/properties/text.tmpl.html","febworms/field-templates/properties/textarea.tmpl.html","febworms/form/field/field.tmpl.html","febworms/form/form-fields/form-fields.tmpl.html","febworms/validation/summary.tmpl.html"]),angular.module("febworms/common/jsonify/jsonify.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/common/jsonify/jsonify.tmpl.html",'<div class="jsonify">\n    <div class="jsonify-label">\n    	{{ expression }}:\n    	<i class="jsonify-button icon-share" ng-click="copy()"></i>\n    	<i class="jsonify-button {{ displayHidden && \'icon-eye-open\' || \'icon-eye-close\' }}" ng-click="displayHidden = !displayHidden"></i>\n	</div>\n    <pre>{{ jsonify | j$on:displayHidden }}</pre>\n</div>')}]),angular.module("febworms/common/tabs/tabs-pane.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/common/tabs/tabs-pane.tmpl.html",'<div class="febworms-tabs-pane" ng-show="$_paneCtrl.active" ng-transclude>\n</div>')}]),angular.module("febworms/common/tabs/tabs.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/common/tabs/tabs.tmpl.html",'<div class="febworms-tabs tabbable">\n  <ul class="nav nav-tabs">\n    <li ng-repeat="pane in $_tabCtrl.panes" ng-class="{ active: pane.active }">\n      <a href="" ng-click="$_tabCtrl.active(pane)"> {{ pane.title }}</a>\n    </li>\n  </ul>\n  <div class="tab-content" ng-transclude></div>\n</div>')}]),angular.module("febworms/edit/canvas/canvas.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/canvas/canvas.tmpl.html",'<div class="febworms-edit-canvas">\n    <div class="form-horizontal">\n        <fieldset>\n            <legend>Canvas</legend>\n            <div class="febworms-edit-canvas-area"\n                 dq-drag-area="febworms-edit-canvas"\n                 dq-drag-enter="canvasCtrl.dragEnter()"\n                 dq-drag-leave="canvasCtrl.dragLeave()"\n                 dq-drop="canvasCtrl.drop()">\n                <div ng-if="!(schema.fields.length)">\n                    <div ng-if="!dragPlaceholder.visible" class="febworms-edit-canvas-area-empty alert alert-info text-center">\n                        <p class="febworms-edit-canvas-area-empty-x">X</p>\n                        <p class="lead hidden-phone"><strong>Drag</strong> one of the available <strong>templates</strong> from the\n                            <strong>palette</strong> onto this <strong>canvas</strong>.</p>\n                    </div>\n                </div>\n                <div ng-repeat="field in schema.fields">\n                    <div ng-if="dragPlaceholder.visible && dragPlaceholder.index === $index"\n                         class="febworms-drag-placeholder"></div>\n                    <div febworms-edit-canvas-field></div>\n                </div>\n                <div ng-if="dragPlaceholder.visible && dragPlaceholder.index == schema.fields.length" class="febworms-drag-placeholder">\n                </div>\n            </div>\n        </fieldset>\n    </div>\n</div>\n')
}]),angular.module("febworms/edit/canvas/field/field.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/canvas/field/field.tmpl.html",'<div class="febworms-field febworms-field-{{ field.type }} febworms-edit-canvas-field"\n     ng-class="{ \'error\': field.$_invalid, \'dragging\': field.$_isDragging }"\n     dq-draggable="febworms-edit-canvas"\n     dq-drag-disabled="dragEnabled === false"\n     dq-drag-begin="canvasCtrl.dragBeginCanvasField($index, field)"\n     dq-drag-end="canvasCtrl.dragEndCanvasField(field)">\n    <div class="control-group">\n        <div class="febworms-field-overlay" \n             ng-mouseenter="dragEnabled = true"  \n             ng-mouseleave="dragEnabled = false">\n            <div class="febworms-field-overlay-drag-top" dq-drag-enter="dragPlaceholder.index = $index"></div>\n            <div class="febworms-field-overlay-drag-bottom" dq-drag-enter="dragPlaceholder.index = ($index + 1)"></div>\n            <div class="btn-toolbar btn-toolbar-left">\n                <button class="btn btn-mini" type="button"\n                        ng-click="field.$_displayProperties = !field.$_displayProperties">Properties\n                </button>\n            </div>\n            <div class="btn-toolbar btn-toolbar-right">\n                <button class="btn btn-mini" type="button"\n                        ng-click="schemaCtrl.swapFields($index - 1, $index)"\n                        ng-disabled="$index === 0">\n                    Up\n                </button>\n                <button class="btn btn-mini" type="button"\n                        ng-click="schemaCtrl.swapFields($index, $index + 1)"\n                        ng-disabled="$index === schema.fields.length - 1">\n                    Down\n                </button>\n                <button class="btn btn-mini" type="button" ng-click="schemaCtrl.removeField($index)">\n                    Remove\n                </button>\n            </div>\n        </div>\n        <div febworms-field="field"\n             febworms-tab-index="-1" \n             febworms-edit-mode="true"\n             febworms-no-validation-summary="true"></div>\n    </div>\n    <div febworms-edit-canvas-field-properties="field"\n         ng-show="field.$_displayProperties"></div>\n</div>')}]),angular.module("febworms/edit/canvas/field/properties/options/options.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/canvas/field/properties/options/options.tmpl.html",'<div ng-if="!field.options || field.options.length === 0" ng-click="optionsCtrl.addOption()" class="alert alert-info">\n    <h2>No options defined</h2>\n    <p class="lead">Click here to add a new option definition to this field.</p>\n</div>\n\n<table ng-if="field.options.length > 0" class="table table-field-options">\n    <thead>\n        <tr>\n            <th></th>\n            <th>Value</th>\n            <th>Text</th>\n            <th>\n                <a href="" class="btn btn-mini" ng-click="optionsCtrl.addOption()" title="Add a new option to the list"><i class="icon-plus"></i></a>\n            </th>\n            <th class="table-field-options-padding"></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr ng-form="fieldOptionForm" ng-repeat="option in field.options" ng-class="{ \'error\': fieldOptionForm.$invalid }">\n            <td ng-if="multiple === false">\n                <input type="radio" name="{{ field.name }}selection[]" value="{{ option.value }}" ng-model="field.value" />\n            </td>\n            <td ng-if="multiple === true">\n                <input type="checkbox" name="{{ field.name }}selection[]" value="{{ option.value }}" ng-model="field.value[option.value]" />\n            </td>\n            <td>\n                <input type="text" name="optionValue" ng-model="option.value" ng-required="true" />\n            </td>\n            <td>\n                <input type="text" ng-model="option.text" />\n            </td>\n            <td>\n                <a href="" class="btn btn-mini" ng-click="optionsCtrl.removeOption($index)" title="Remove this option from the list"><i class="icon-trash"></i></a>\n            </td>\n        </tr>\n    </tbody>\n</table>\n')}]),angular.module("febworms/edit/canvas/field/properties/properties.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/canvas/field/properties/properties.tmpl.html",'<div class="febworms-field-properties">\n    <form novalidate class="form-horizontal" name="fieldPropertiesForm">\n\n        <div ng-include="renderInfo.propertiesTemplateUrl"></div>\n\n        <div class="control-group">\n            <div class="controls">\n                <label class="checkbox">\n                    <input type="checkbox" ng-model="field.$_debug"> Display field debug information\n                </label>\n            </div>\n        </div>\n\n        <div ng-if="field.$_debug" data-jsonify="field"></div>\n\n    </form>\n</div>')}]),angular.module("febworms/edit/canvas/field/properties/property-field/common.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/canvas/field/properties/property-field/common.tmpl.html",'<!-- fieldName -->\n<div ng-if="fields.fieldname">\n  <div febworms-property-field="fieldName" febworms-property-field-label="Name">\n    <input type="text"\n           name="fieldName"\n           ng-model="field.name"\n           ng-required="true"\n           ng-pattern="/^[a-zA-Z]([\\w]+)?$/"\n           febworms-unique-field-name/>\n  </div>\n</div>\n\n<!-- displayName -->\n<div ng-if="fields.displayname">\n  <div febworms-property-field="displayName" febworms-property-field-label="Display name">\n    <input type="text" name="displayName" ng-model="field.displayName"/>\n  </div>\n</div>\n\n<!-- placeholder -->\n<div ng-if="fields.placeholder">\n  <div febworms-property-field="fieldPlaceholder" febworms-property-field-label="Placeholder text">\n    <input type="text"\n             name="fieldPlaceholder"\n             ng-model="field.placeholder"/>\n  </div>\n</div>\n')}]),angular.module("febworms/edit/canvas/field/properties/property-field/field-value.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/canvas/field/properties/property-field/field-value.tmpl.html",'<div ng-if="draw">\n	<div febworms-property-field="fieldValue" febworms-property-field-label="Initial value">\n		<div ng-transclude></div>\n	</div>\n</div>')}]),angular.module("febworms/edit/canvas/field/properties/property-field/property-field.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/canvas/field/properties/property-field/property-field.tmpl.html",'<div class="control-group" ng-class="{ \'error\': fieldPropertiesForm[fieldName].$invalid }">\n    <label class="control-label">{{ fieldLabel }}</label>\n    <div class="controls">\n        <div ng-transclude></div>\n        <div febworms-validation-summary="{{ fieldName }}"></div>\n    </div>\n</div>')}]),angular.module("febworms/edit/canvas/field/properties/validation/validation-message.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/canvas/field/properties/validation/validation-message.tmpl.html",'<div ng-form="valMsgForm">\n	<div febworms-property-field="message" \n	     febworms-property-field-label="Message">\n	  <input type="text"\n	  		 name="message" \n	  		 title="{{ tooltip }}" \n	  		 placeholder="Optional message" \n	  		 ng-model="field.validation.messages[validationType]" />\n	</div>\n</div>')}]),angular.module("febworms/edit/canvas/field/properties/validation/validation.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/canvas/field/properties/validation/validation.tmpl.html",'<!-- \n  input fields marked as febworms-field-redraw will cause the initial value input to redraw\n-->\n\n<!-- minlength -->\n<div ng-if="fields.minlength" class="febworms-property-field-validation">  \n  <div febworms-property-field="minlength" \n       febworms-property-field-label="Minimum length">\n    <input type="text"\n           febworms-field-redraw\n           febworms-input-number\n           title="The minimum length of characters that should be entered."\n       		 name="minlength"\n       		 ng-model="field.validation.minlength"/>\n  </div>\n\n  <div ng-if="field.validation.minlength >= 1" >\n    <div febworms-edit-validation-message="minlength"></div>\n  </div>\n</div>\n\n<!-- maxlength -->\n<div ng-if="fields.maxlength" class="febworms-property-field-validation">  \n  <div febworms-property-field="maxlength" \n       febworms-property-field-label="Maximum length">\n    <input type="text"\n           febworms-field-redraw\n           febworms-input-number\n           title="The maximum length of characters that should be entered."\n           name="maxlength"\n           ng-model="field.validation.maxlength"/>\n  </div>\n\n  <div ng-if="field.validation.maxlength >= 1" >\n    <div febworms-edit-validation-message="maxlength"></div>\n  </div>\n</div>\n\n<!-- pattern -->\n<div ng-if="fields.pattern" class="febworms-property-field-validation">  \n  <div febworms-property-field="pattern" \n       febworms-property-field-label="Pattern">\n    <div febworms-dropdown-input="patternOptions"\n         name="pattern"\n         title="The pattern that should match with the input value."\n         febworms-parse-pattern\n         febworms-field-redraw\n         ng-model="field.validation.pattern"></div>\n  </div>\n\n  <div ng-if="field.validation.pattern.length > 0" >\n    <div febworms-edit-validation-message="pattern"></div>\n  </div>\n</div>\n\n<!-- required -->\n<div ng-if="fields.required" class="febworms-property-field-validation">\n  <div febworms-property-field="required">\n    <label class="checkbox" title="Indicates if a value is required for this field.">\n      <input type="checkbox" ng-model="field.validation.required" />Required\n    </label>\n  </div>\n  \n  <div ng-if="field.validation.required">\n    <div febworms-edit-validation-message="required"></div>\n  </div>\n</div>\n')}]),angular.module("febworms/edit/edit.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/edit.tmpl.html",'<div class="febworms-edit">\n\n    <div ng-if="preview" ng-init="previewForm = { data: {} }">\n        <form name="previewForm.state"\n              febworms-form \n              febworms-form-data="previewForm.data"\n              class="form-horizontal"\n              novalidate>\n        </form>\n\n        <div febworms-edit-form-actions></div>\n    </div>\n\n    <div ng-if="!preview">\n\n        <div febworms-edit-meta>\n        </div>\n\n        <div class="row-fluid">\n            <div class="span8">\n                <div febworms-form\n                     febworms-no-render="true"\n                     febworms-edit-canvas></div>\n            </div>\n            <div class="span4">\n                <div febworms-edit-palette\n                     febworms-form\n                     febworms-no-render="true"></div>\n            </div>\n        </div>\n\n        <div febworms-edit-form-actions></div>\n    </div>\n</div>')}]),angular.module("febworms/edit/form-actions/form-actions.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/form-actions/form-actions.tmpl.html",'<div ng-if="actionsEnabled" class="febworms-edit-form-actions form-horizontal">\n\n    <div ng-if="!preview">\n        <div ng-if="debugInfoEnabled">\n            <div class="controls">\n                <label class="checkbox">\n                    <input type="checkbox" ng-model="debugSchema"> Display schema information\n                </label>\n            </div>\n\n            <div ng-if="debugSchema" data-jsonify="schema"></div>\n        </div>\n\n        <div class="form-actions">\n            <a class="btn btn-primary" ng-disabled="schema.$_invalid" ng-click="handleSave()">Save\n                changes</a>\n            <a class="btn" ng-disabled="schema.$_invalid" ng-click="togglePreview()">Preview\n                form</a>\n            <a class="btn" ng-click="handleCancel()">Cancel</a>\n        </div>\n    </div>\n\n    <div ng-if="preview">\n\n        <div ng-if="debugInfoEnabled">\n            <div class="control-group">\n                <div class="controls">\n                    <label class="checkbox">\n                        <input type="checkbox" ng-model="debugFormData"> Display form data information\n                    </label>\n                </div>    \n            </div>\n\n            <div ng-if="debugFormData" febworms-tabs>\n                <div febworms-tabs-pane="Form data">\n                    <div jsonify="previewForm.data"></div>\n                </div>\n                <div febworms-tabs-pane="Form status">\n                    <div jsonify="previewForm.state" jsonify-display-hidden="true"></div>\n                </div>\n            </div>\n\n        </div>\n\n        <div class="form-actions">\n            <a class="btn btn-primary" ng-click="togglePreview()">Close preview</a>\n        </div>\n\n    </div>\n</div>')}]),angular.module("febworms/edit/meta/meta.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/meta/meta.tmpl.html",'<form novalidate name="metaForm" class="febworms-edit-meta form-horizontal">\n    <fieldset>\n        <legend>General Information</legend>\n        <div class="control-group control-required" ng-class="{ \'error\': metaForm.formName.$invalid }">\n            <label class="control-label" for="formName">Name</label>\n            <div class="controls">\n                <input type="text"\n                       id="formName"\n                       name="formName"\n                       placeholder="The name of the form"\n                       ng-model="schema.name"\n                       ng-required="true">\n                <!-- <span ng-if="metaForm.formName.$error.required && metaForm.formName.$dirty" class="help-inline">This field is required.</span> -->\n                <div febworms-validation-summary="formName"></div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n')}]),angular.module("febworms/edit/palette/categories/categories.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/palette/categories/categories.tmpl.html",'<legend ng-click="paletteCategoriesMenuOpen = !paletteCategoriesMenuOpen"\n        ng-class="{ \'open\': paletteCategoriesMenuOpen }">Palette \n    <span class="febworms-legend-extra febworms-edit-palette-categories hidden-tablet">- {{ categoryName || \'All field types\' }}</span> <i class="caret"></i>\n    <ul class="dropdown-menu">\n        <li ng-repeat="(name, category) in categories" ng-class="{ \'active\': categoryName === name }">\n            <a ng-click="setCategory(name, category)">\n                {{ name }}\n            </a>\n        </li>\n        <li class="divider"></li>\n        <li ng-class="{ \'active\': !category }">\n            <a ng-click="setCategory(null)">All field types</a>\n        </li>\n    </ul>\n</legend>')}]),angular.module("febworms/edit/palette/palette.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/edit/palette/palette.tmpl.html",'<div class="febworms-edit-palette">\n    <div class="form-horizontal">\n        <fieldset>\n            <div febworms-edit-palette-categories data-category="selectedCategory"></div>\n            <div ng-repeat="template in templates | filter:templateFilter" class="febworms-field"\n                 dq-draggable="febworms-edit-canvas" dq-drag-begin="{ source: \'palette\', field: template }">\n                <div class="febworms-field-overlay">\n                    <div class="btn-toolbar btn-toolbar-right">\n                        <button class="btn btn-mini" type="button" ng-click="schemaCtrl.addField(template)">Add</button>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <div febworms-field="template" \n                         febworms-tab-index="-1" \n                         febworms-no-validation-summary="true"\n                         febworms-edit-mode="true"></div>\n                </div>\n            </div>\n        </fieldset>\n    </div>\n</div>\n')}]),angular.module("febworms/field-templates/default/checkbox.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/checkbox.tmpl.html",'<label class="checkbox">\n    <input febworms-field-input\n    	   id="{{ field.$_id }}"\n    	   type="checkbox"\n    	   tabindex="{{ tabIndex }}" \n    	   ng-model="form.data[field.schema.name]">\n    <span ng-if="field.schema.nolabel">{{ field.schema.displayName }}</span>\n</label>\n')}]),angular.module("febworms/field-templates/default/checkboxlist.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/checkboxlist.tmpl.html",'<label class="checkbox" ng-repeat="option in field.schema.options">\n    <input febworms-field-input\n    	   type="checkbox"\n           tabindex="{{ tabIndex }}"\n           name="{{ field.schema.name }}[]" value="{{ option.value }}"\n           ng-model="form.data[field.schema.name][option.value]">\n    <span>{{option.text || option.value}}</span>\n</label>\n')}]),angular.module("febworms/field-templates/default/dropdownlist.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/dropdownlist.tmpl.html",'<div febworms-field-input \n	 febworms-dropdown-input="field.schema.options"\n	 id="{{ field.$_id }}"\n	 ng-model="form.data[field.schema.name]"\n	 ng-required="field.schema.validation.required"\n	 tabindex="{{ tabIndex }}"\n	 placeholder="{{ field.schema.placeholder }}"\n	 ng-minlength="{{ field.schema.validation.minlength }}"\n	 ng-maxlength="{{ field.schema.validation.maxlength }}"\n	 ng-pattern="/{{ field.schema.validation.pattern }}/"\n	 ng-disabled="isDisabled(field.schema)">\n</div>\n')}]),angular.module("febworms/field-templates/default/email.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/email.tmpl.html",'<input febworms-field-input\n       type="email"\n       id="{{ field.$_id }}"\n       tabindex="{{ tabIndex }}"\n       placeholder="{{ field.schema.placeholder }}"\n       ng-model="form.data[field.schema.name]"\n       ng-required="field.schema.validation.required"\n       ng-minlength="{{ field.schema.validation.minlength }}"\n       ng-maxlength="{{ field.schema.validation.maxlength }}"\n       ng-pattern="/{{ field.schema.validation.pattern }}/"\n       ng-disabled="isDisabled(field.schema)">')}]),angular.module("febworms/field-templates/default/not-in-cache.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/not-in-cache.tmpl.html",'<div class="febworms-field-not-in-cache alert alert-error">\n    <p>No template registered in cache for field type "{{ field.type }}".</p>\n</div>')}]),angular.module("febworms/field-templates/default/number.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/number.tmpl.html",'<input febworms-field-input\n       febworms-input-number\n       type="text"\n       id="{{ field.$_id }}"\n       tabindex="{{ tabIndex }}"\n       placeholder="{{ field.schema.placeholder }}"\n       min="{{ field.schema.validation.min }}"\n       max="{{ field.schema.validation.max }}" \n       ng-model="form.data[field.schema.name]"\n       ng-required="field.schema.validation.required"\n       ng-minlength="{{ field.schema.validation.minlength }}"\n       ng-maxlength="{{ field.schema.validation.maxlength }}"\n       ng-pattern="/{{ field.schema.validation.pattern }}/"\n       ng-disabled="isDisabled(field.schema)">')}]),angular.module("febworms/field-templates/default/password.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/password.tmpl.html",'<input febworms-field-input\n	   type="password"\n       id="{{ field.$_id }}"\n       tabindex="{{ tabIndex }}"\n       placeholder="{{ field.schema.placeholder }}"\n       ng-model="form.data[field.schema.name]"\n       ng-required="field.schema.validation.required"\n       ng-minlength="{{ field.schema.validation.minlength }}"\n       ng-maxlength="{{ field.schema.validation.maxlength }}"\n       ng-pattern="/{{ field.schema.validation.pattern }}/"\n       ng-disabled="isDisabled(field.schema)">')}]),angular.module("febworms/field-templates/default/radiobuttonlist.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/radiobuttonlist.tmpl.html",'<label class="radio" ng-repeat="option in field.schema.options">\n    <input febworms-field-input\n    	   type="radio"\n           name="{{ field.schema.name }}[]"\n           tabindex="{{ tabIndex }}"\n           value="{{ option.value }}"\n           ng-model="form.data[field.schema.name]">\n    <span>{{option.text || option.value}}</span>\n</label>')}]),angular.module("febworms/field-templates/default/selectlist.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/selectlist.tmpl.html",'<select febworms-field-input\n		id="{{ field.$_id }}"\n        ng-model="form.data[field.schema.name]"\n        ng-required="field.schema.validation.required"\n        tabindex="{{ tabIndex }}">\n    <option ng-repeat="option in field.schema.options" \n    		value="{{ option.value }}" \n    		ng-selected="form.data[field.schema.name] === option.value">{{ option.text || option.value }}</option>\n</select>\n')}]),angular.module("febworms/field-templates/default/text.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/text.tmpl.html",'<input febworms-field-input\n       type="text"\n       id="{{ field.$_id }}"\n       tabindex="{{ tabIndex }}"\n       placeholder="{{ field.schema.placeholder }}"\n       ng-model="form.data[field.schema.name]"\n       ng-required="field.schema.validation.required"\n       ng-minlength="{{ field.schema.validation.minlength }}"\n       ng-maxlength="{{ field.schema.validation.maxlength }}"\n       ng-pattern="/{{ field.schema.validation.pattern }}/"\n       ng-disabled="isDisabled(field.schema)">')}]),angular.module("febworms/field-templates/default/textarea.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/default/textarea.tmpl.html",'<textarea febworms-field-input\n		  febworms-placeholder="field.schema.placeholder"\n		  ng-model="form.data[field.schema.name]"\n		  id="{{ field.$_id }}"\n		  tabindex="{{ tabIndex }}"\n		  ng-required="field.schema.validation.required"\n		  ng-minlength="{{ field.schema.validation.minlength }}"\n          ng-maxlength="{{ field.schema.validation.maxlength }}"\n          ng-pattern="/{{ field.schema.validation.pattern }}/">\n</textarea>')}]),angular.module("febworms/field-templates/properties/checkbox.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/properties/checkbox.tmpl.html",'<div febworms-tabs>\n	<div febworms-tabs-pane="Properties">\n		<div febworms-property-field-common="{ fieldname: true, displayname: true }"></div>\n		<div febworms-property-field="fieldValue">\n			<label class="checkbox">\n            	<input type="checkbox" name="fieldValue" ng-model="field.value">\n            	<span>Initial value</span>\n        	</label>\n		</div>\n	</div>\n</div>')}]),angular.module("febworms/field-templates/properties/checkboxlist.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/properties/checkboxlist.tmpl.html",'<div febworms-tabs>\n    <div febworms-tabs-pane="Properties">\n        <div febworms-property-field-common="{ fieldname: true, displayname: true }"></div>\n    </div>\n    <div febworms-tabs-pane="Options">\n        <div febworms-property-field-options="multiple"></div>\n    </div>\n</div>\n')}]),angular.module("febworms/field-templates/properties/dropdownlist.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/properties/dropdownlist.tmpl.html",'<div febworms-tabs>\n	<div febworms-tabs-pane="Properties">\n		<div febworms-property-field-common="{ fieldname: true, displayname: true, placeholder: true }"></div>\n		<div febworms-property-field-value>\n			<div febworms-field-input \n				 febworms-dropdown-input="field.options"\n				 ng-model="field.value"\n				 ng-minlength="{{ field.schema.validation.minlength }}"\n				 ng-maxlength="{{ field.schema.validation.maxlength }}"\n				 ng-pattern="/{{ field.schema.validation.pattern }}/">\n			</div>\n		</div>\n	</div>\n	<div febworms-tabs-pane="Validation">\n		<div febworms-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div>\n	</div>\n</div>\n')}]),angular.module("febworms/field-templates/properties/email.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/properties/email.tmpl.html",'<div febworms-tabs>\n	<div febworms-tabs-pane="Properties">\n		<div febworms-property-field-common="{ fieldname: true, displayname: true, placeholder: true }"></div>\n		<div febworms-property-field-value>\n			<input type="email" \n				   name="fieldValue" \n				   ng-model="field.value" \n				   ng-minlength="{{ field.validation.minlength }}"\n       			   ng-maxlength="{{ field.validation.maxlength }}"\n       			   ng-pattern="/{{ field.validation.pattern }}/"/>\n		</div>\n	</div>\n	<div febworms-tabs-pane="Validation">\n		<div febworms-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div>\n	</div>\n</div>')}]),angular.module("febworms/field-templates/properties/number.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/properties/number.tmpl.html",'<div febworms-tabs>\n  <div febworms-tabs-pane="Properties">\n    <div febworms-property-field-common="{ fieldname: true, displayname: true, placeholder: true }"></div>\n\n    <div febworms-property-field-value>\n      <input febworms-input-number \n             type="text" \n             name="fieldValue" \n             ng-model="field.value" \n             min="{{ field.validation.min }}"\n             max="{{ field.validation.max }}"\n             ng-minlength="{{ field.validation.minlength }}"\n             ng-maxlength="{{ field.validation.maxlength }}"\n             ng-pattern="/{{ field.validation.pattern }}/"/>\n    </div>\n  </div>\n    \n  <div febworms-tabs-pane="Validation">\n\n    <!-- min -->\n    <div class="febworms-property-field-validation">  \n      <div febworms-property-field="min" \n           febworms-property-field-label="Minimum value">\n           <input febworms-input-number\n                  febworms-field-redraw\n                  type="text"\n                  name="min"\n                  title="The minimum value that should be entered"\n                  ng-model="field.validation.min"/>\n      </div>\n\n      <div ng-if="field.validation.min >= 0" >\n        <div febworms-edit-validation-message="min"></div>\n      </div>\n    </div>\n\n    <!-- max -->\n    <div class="febworms-property-field-validation">  \n      <div febworms-property-field="max" \n           febworms-property-field-label="Maximum value">\n           <input febworms-input-number\n                  febworms-field-redraw\n                  type="text"\n                  name="max"\n                  title="The maximum value that should be entered"\n                  ng-model="field.validation.max"/>\n      </div>\n\n      <div ng-if="field.validation.max >= 0" >\n        <div febworms-edit-validation-message="max"></div>\n      </div>\n    </div>\n\n    <div febworms-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div>\n  </div>\n</div>\n')}]),angular.module("febworms/field-templates/properties/password.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/properties/password.tmpl.html",'<div febworms-tabs>\n  <div febworms-tabs-pane="Properties">\n    <div febworms-property-field-common="{ fieldname: true, displayname: true, placeholder: true }"></div>\n    <div febworms-property-field-value>\n      <input febworms-input-number type="password" name="fieldValue" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="/{{ field.validation.pattern }}/" />\n    </div>\n  </div>\n\n  <div febworms-tabs-pane="Validation">\n    <div febworms-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div>\n  </div>\n</div>\n')}]),angular.module("febworms/field-templates/properties/radiobuttonlist.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/properties/radiobuttonlist.tmpl.html",'<div febworms-tabs>\n    <div febworms-tabs-pane="Properties">\n        <div febworms-property-field-common="{ fieldname: true, displayname: true }"></div>\n    </div>\n    <div febworms-tabs-pane="Options">\n        <div febworms-property-field-options></div>\n    </div>\n</div>\n')}]),angular.module("febworms/field-templates/properties/selectlist.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/properties/selectlist.tmpl.html",'<div febworms-tabs>\n    <div febworms-tabs-pane="Properties">\n        <div febworms-property-field-common="{ fieldname: true, displayname: true }"></div>\n    </div>\n    <div febworms-tabs-pane="Options">\n        <div febworms-property-field-options></div>\n    </div>\n</div>\n')}]),angular.module("febworms/field-templates/properties/text.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/properties/text.tmpl.html",'<div febworms-tabs>\n	<div febworms-tabs-pane="Properties">\n		<div febworms-property-field-common="{ fieldname: true, displayname: true, placeholder: true }"></div>\n		<!-- \n			\n			The field-value directive will re-render itself when certain validation values are modified.\n			This is needed because angular does not watch or observe the values of certain attributes and allows\n			an invalid initial value to be saved in the form schema.\n\n			Important: the transcluded form field must be name fieldValue!\n\n		-->\n		<div febworms-property-field-value>\n			<input type="text" \n				   name="fieldValue" \n				   ng-model="field.value" \n				   ng-minlength="{{ field.validation.minlength }}"\n       			   ng-maxlength="{{ field.validation.maxlength }}"\n       			   ng-pattern="/{{ field.validation.pattern }}/"/>\n		</div>\n	</div>\n	<div febworms-tabs-pane="Validation">\n		<div febworms-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div>\n	</div>\n</div>\n')}]),angular.module("febworms/field-templates/properties/textarea.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/field-templates/properties/textarea.tmpl.html",'<div febworms-tabs>\n	<div febworms-tabs-pane="Properties">\n		<div febworms-property-field-common="{ fieldname: true, displayname: true, placeholder: true }"></div>\n		<div febworms-property-field-value>\n			<textarea name="fieldValue" \n				   ng-model="field.value" \n				   ng-minlength="{{ field.validation.minlength }}"\n       			   ng-maxlength="{{ field.validation.maxlength }}"\n       			   ng-pattern="/{{ field.validation.pattern }}/"/>\n			</textarea>\n		</div>\n	</div>\n	<div febworms-tabs-pane="Validation">\n		<div febworms-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div>\n	</div>\n</div>')}]),angular.module("febworms/form/field/field.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/form/field/field.tmpl.html",'<div class="febworms-field-inner" ng-class="{ \'febworms-field-required\': fieldSchema.validation.required }">\n	<label ng-if="!field.schema.nolabel" class="control-label" for="{{ field.$_id }}">{{ fieldSchema.displayName }}</label>\n	<div class="controls">\n		<div ng-include="renderInfo.templateUrl"></div>\n		<div febworms-validation-summary febworms-validation-messages="fieldSchema.validation.messages" ng-if="!noValidationSummary"></div>\n	</div>\n</div>')
}]),angular.module("febworms/form/form-fields/form-fields.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/form/form-fields/form-fields.tmpl.html",'<div class="febworms-form-fields">\n	<fieldset>\n      <legend>{{ form.schema.name }}</legend>\n\n      <div ng-repeat="field in form.schema.fields">\n        <div class="control-group" ng-class="{ \'error\': form.state[field.name].$invalid }">\n			<div febworms-field="field"></div>\n        </div>\n      </div>\n\n	</fieldset>\n</div>')}]),angular.module("febworms/validation/summary.tmpl.html",[]).run(["$templateCache",function(a){a.put("febworms/validation/summary.tmpl.html",'<ul class="febworms-validation-summary help-block unstyled" ng-if="field.state.$invalid && field.state.$dirty">\n	<li ng-repeat="(key, error) in field.state.$error" ng-if="error" febworms-bind-expression="messages[key]"></li>\n</ul>')}]);