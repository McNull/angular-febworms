module.exports = function(config) {
  config.set({

    // base path, that will be used to resolve files and exclude
    basePath: '../',


    // frameworks to use
    frameworks: ['jasmine'],


<%
var isReleaseTarget = helpers.target === 'release';
var files = [];

/* IGNORE
// We don't want the minified vendor js files when testing -- they don't always contain the full error messages.
// In release mode the 'js' properties only contain the minified targets -- the 'test' properties
// contain all the nonminified vendor scripts.

 if(!isReleaseTarget) {
    files = helpers.getIncludes('js', ['vendor'], '.')
} IGNORE */

files = files.concat(helpers.getIncludes('test', ['vendor'], '.'))
             .concat(helpers.getIncludes('js', ['febworms', 'app'], isReleaseTarget ? 'dist' : 'src', true))
             .concat(helpers.getIncludes('html2js', ['febworms', 'app'], 'dist', true))
             .concat(helpers.getIncludes('test', ['febworms', 'app'], 'src', true));
%>

    // list of files / patterns to load in the browser
    files: <%- JSON.stringify(files, null, 6) %>,

    // list of files to exclude
    exclude: [],

    // test results reporter to use
    // possible values: 'dots', 'progress', 'junit', 'growl', 'coverage'
    reporters: ['growl', 'dots'],

    // web server port
    port: 9876,

    // enable / disable colors in the output (reporters and logs)
    colors: true,

    // level of logging
    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
    logLevel: config.LOG_INFO,

    // enable / disable watching file and executing tests whenever any file changes
    autoWatch: true,

    // Start these browsers, currently available:
    // - Chrome
    // - ChromeCanary
    // - Firefox
    // - Opera
    // - Safari (only Mac)
    // - PhantomJS
    // - IE (only Windows)
    browsers: ['PhantomJS' ],

    // If browser does not capture in given timeout [ms], kill it
    captureTimeout: 60000,


    // Continuous Integration mode
    // if true, it capture browsers, run tests and exit
    singleRun: false
  });
};
